swagger: '2.0'
info:
  title: GA4GH Tool Discovery API
  description: 'Proposed API for GA4GH tool repositories. A tool consists of a (currently Docker) image paired with a document that describes how to use that image (currently CWL or WDL) and a Dockerfile that describes how to re-produce the image in the future. We use the following terminology, an "image" describes a (Docker) container as stored on a filesystem, a "tool" describes one of the triples as described above, and a "container" should only be used to describe a running image'
  version: 1.0.0
produces:
  - application/json
  - text/plain
basePath: /api/v1
tags:
  - name: GA4GH
    description: A set of resources proposed as a common standard for tool repositories
paths:
  /tools/{registry-id}:
    get:
      summary: List one specific tool (or tool version), acts as an anchor for self references
      description: This endpoint returns one specific tool
      tags:
        - GA4GH
      parameters:
        - name: registry-id
          in: path
          required: true
          type: string
          description: A unique identifier of the tool for this particular tool registry, for example `123456` or `123456_v1`
      responses:
        '200':
          description: An array of methods that match the filter.
          schema:
            type: array
            items:
              $ref: '#/definitions/Tool'
  /tools:
    get:
      summary: List all tools
      description: >
        This endpoint returns all tools available or a filtered subset using
        metadata query parameters.
      tags:
        - GA4GH
      parameters:
        - name: registry-id 
          type: string
          in: query
          description: A unique identifier of the tool for this particular tool registry, for example `123456` or `123456_v1`
        - name: registry
          in: query
          type: string
          description: The image registry that contains the image.
        - name: organization
          in: query
          type: string
          description: The organization in the registry that published the image.
        - name: name
          in: query
          type: string
          description: The name of the image.
        - name: toolname
          in: query
          type: string
          description: The name of the tool.
        - name: description
          in: query
          type: string
          description: The description of the tool.
        - name: author
          in: query
          type: string
          description: 'The author of the tool (TODO a thought occurs, are we assuming that the author of the CWL and the image are the same?).'
      responses:
        '200':
          description: An array of methods that match the filter.
          schema:
            type: array
            items:
              $ref: '#/definitions/Tool'
  /tools/{registry-id}/descriptor:
    get:
      summary: Get the tool descriptor (CWL/WDL) for the specified tool.
      description: Returns the CWL or WDL descriptor for the specified tool.
      tags:
        - GA4GH
      parameters:
        - name: format
          in: query
          description: The output type of the descriptor. If not specified it is up to the underlying implementation to determine which output format to return.
          type: string
          enum:
            - CWL
            - WDL
        - name: registry-id
          in: path
          description: A unique identifier of the tool for this particular tool registry, for example `123456` or `123456_v1`
          required: true
          type: string
      responses:
        '200':
          description: The tool descriptor.
          schema:
            $ref: '#/definitions/ToolDescriptor'
        '404':
          description: The tool can not be output in the specified format.
          schema:
            $ref: '#/definitions/Error'
  /tools/{registry-id}/dockerfile:
    get:
      summary: Get the dockerfile for the specified image.
      description: Returns the dockerfile for the specified image.
      tags:
        - GA4GH
      parameters:
        - name: registry-id
          in: path
          description: A unique identifier of the tool for this particular tool registry, for example `123456` or `123456_v1`
          required: true
          type: string
      responses:
        '200':
          description: The tool payload.
          schema:
            $ref: '#/definitions/ToolDockerfile'
        '404':
          description: The tool payload is not present in the service.
          schema:
            $ref: '#/definitions/Error'
definitions:
  ToolType:
    # thought. it would be nicer if ToolTypes are consistent across registries. How would we accomplish this? Operate a MIME-type like list? 
    description: Describes a type of tool allowing us to categorize workflows, the language of the workflow, tools, and maybe even other entities separately
    properties:
      id:
        type: string
        description: The unique identifier for the type
      name:
        type: string
        description: A short friendly name for the type
      description:
        type: string
        description: A longer explanation of what this type is and what it can accomplish
  Tool:
    description: A tool (or described tool) describes one pairing of a tool as described in a descriptor file (which potentially describes multiple tools) and a Docker image.
    required:
      - global-id
      - registry-id
      - registry
      - organization
      - name
      - author
      - meta-version
      - tooltype
    properties:
      global-id:
        type: string
        description: The unique identifier for the image. (Proposed - This id should be globally unique across systems and should also identify the system that it comes from for example This id should be globally unique across systems, should also identify the system that it comes from, and be a URL that resolves for example `http://agora.broadinstitute.org/tools/123456`)
      registry-id: 
        type: string
        description: A unique identifier of the tool for this particular tool registry, for example `123456` or `123456_v1`
      registry:
        type: string
        description: The registry that contains the image.
      organization:
        type: string
        description: The organization that published the image.
      name:
        type: string
        description: The name of the image.
      toolname:
        type: string
        description: The name of the tool.
      tooltype:
        $ref: '#/definitions/ToolType'
        description: A constrained category for the tool.
      description:
        type: string
        description: The description of the tool.
      author:
        type: string
        description: The author of the tool.
      meta-version:
        type: string
        description: 'The version of this entry of the registry. Iterates when fields like the description, author, etc. are updated.'
      contains:
        description: An array of IDs for the applications that are stored inside this tool (for example `https://bio.tools/tool/mytum.de/SNAP2/1`)
        type: array
        items: 
           type: string
      versions:
        type: array
        items:
          $ref: '#/definitions/ToolVersion'
  ToolVersion:
    description: A tool version describes a particular iteration of a tool as described by a reference to a specific image and dockerfile.
    required:
      - global-id
      - descriptor
      - image
    properties:
      name:
        type: string
        description: The name of the version.
      global-id:
        type: string
        description: The unique identifier for this version of a tool. (Proposed - This id should be globally unique across systems and should also identify the system that it comes from for example This id should be globally unique across systems, should also identify the system that it comes from, and be a URL that resolves for example `http://agora.broadinstitute.org/tools/123456/v1` This can be the same as the registry-id depending on the structure of your registry)
      registry-id:
        type: string
        description: A unique identifier of the tool for this particular tool registry, for example `123456` or `123456_v1`
      descriptor:
        $ref: '#/definitions/ToolDescriptor'
      image:
        type: string
        description: The docker path to the image (and version) for this tool. (e.g. quay.io/seqware/seqware_full/1.1)
      dockerfile:
        type: string
        description: 'The url to the dockerfile used to build this image, should include version information (e.g. https://github.com/ICGC-TCGA-PanCancer/pcawg_delly_workflow/blob/master/delly_docker/Dockerfile )'
  ToolDescriptor:
    description: A tool descriptor is a metadata document that describes one or more tools.
    required:
      - descriptor
    properties:
      descriptor:
        type: string
        description: The descriptor that represents this version of the tool. (CWL or WDL)
  ToolDockerfile:
    description: A tool dockerfile is a document that describes how to build a particular Docker image.
    required:
      - dockerfile
    properties:
      dockerfile:
        type: string
        description: The dockerfile content for this tool.
  Error:
    properties:
      code:
        type: integer
        format: int32
        default: 500
      message:
        type: string
        default: Internal Server Error
externalDocs:
  description: Description of GA4GH Tool Registry (Exchange) Schema 
  url: 'https://github.com/ga4gh/tool-registry-schemas'

